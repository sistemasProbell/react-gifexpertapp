{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/imageItem.js","components/GiftRes.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInput","onSubmit","e","preventDefault","trim","length","categoriass","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","ImageItem","console","log","className","src","alt","GifRes","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifComponent","categorias","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,aADI,CACJ,QAAMC,SATU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAW,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAS,MAKb,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBQ,SAACP,GACjBF,EAASE,EAAEQ,OAAOF,a,+BCPbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAY,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCDHS,EAAS,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UAErB,ECLwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACEH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAG1B,CAACtB,IACGuB,EDT2BK,CAAa5B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAEtB,OACI,eAAC,WAAD,WACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAIQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEiBtBkB,EA/BM,WACjB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAS,OACpB,cAAC,EAAD,CAEIA,UAAWA,GADNA,YCnB3B+B,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.b3516f02.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {//aqui recibe la funcion del componente GifExpertApp\r\n    const [inputValue, setInput] = useState('');//si el useState se queda vacio retorena undefined\r\n\r\n    const inputChange = (e) => {//funcion para cambiar el valor del input\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const manejaEnter = (e) => {//funcion para detectar el enter y agregar la categoria nueva al array\r\n        e.preventDefault();//evita el refresh del evento submit\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias(categoriass => [inputValue, ...categoriass]);\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    return (//lo que se renderiza en el HTML del componente\r\n        <form onSubmit={manejaEnter}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={inputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifs = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=CfctX92NoflumI4iBcx3rQuilONQeErs`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    // console.log(gifs);\r\n    // setImages(gifs)\r\n    return gifs;\r\n}","import React from 'react';\r\nexport const ImageItem = ({ id, title, url }) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","\r\nimport React, { Fragment } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { ImageItem } from './imageItem';\r\n\r\nexport const GifRes = ({ categoria }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <ImageItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {//el hook use efect recibe una funcion y una lista de dependencias \r\n        getGifs(categoria)\r\n            .then(imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n            })\r\n    }, [categoria])\r\n    return state\r\n}\r\n","// import React, { Fragment, useState } from 'react';\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifRes } from './components/GiftRes';\r\n\r\nconst GifComponent = () => {\r\n    const [categorias, setCategorias] = useState(['Dragon Ball']);\r\n    // const agregaCategoria = () => {//setCategorias( o como se llame, en realidad es la segunda fucion que retorna el usestate) se utiliza para cambiar el estado del componente\r\n    //     const nuevoElemeto = 'Los Simpsons';\r\n    //     //setCategorias([...categorias, nuevoElemeto]);//1era forma\r\n    //     setCategorias(cats => [nuevoElemeto, ...cats]);//2da forma con callback y el nuevo elemento al principio\r\n\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            {/* asi se manda la funcion a otro componente( comunicacion entre componentes) â†‘ */}\r\n            <hr />\r\n            {/* <button onClick={agregaCategoria}>+ 1</button> */}\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n                        <GifRes\r\n                            key={categoria}\r\n                            categoria={categoria}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default GifComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifComponent from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\nReactDOM.render(<GifComponent />, divRoot);\n\n"],"sourceRoot":""}